<script lang="ts">
    // import Home from "./Home.svelte";
    import {onMount} from "svelte";

    function randomH() {
        return Math.floor(Math.random() * 360);
    }

    function randomS() {
        return Math.floor(Math.random() * 101);
    }

    function rgb2hex(rgb: string) {
        let rgx = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);

        function hex(x: string) {
            return ("0" + parseInt(x).toString(16)).slice(-2);
        }

        if (!rgx) return;
        return "#" + hex(rgx[1]) + hex(rgx[2]) + hex(rgx[3]);
    }

    function hslToHex(h, s, l) {
        l /= 100;
        const a = s * Math.min(l, 1 - l) / 100;
        const f = n => {
            const k = (n + h / 30) % 12;
            const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
            return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix "0" if needed
        };
        return `#${f(0)}${f(8)}${f(4)}`;
    }

    function generateShades() {
        let randomHue = randomH();
        let randomSat = randomS();
        console.log(randomSat);
        console.log(randomHue);
        let colors = [];

        for (let percent of [0,1,2,3]) {
            colors.push(hslToHex(randomH(), randomS(), 30));
        }
        return colors;
    }

    let colors = generateShades();
    console.log(colors);
    // colors.slice(-1);
    console.log(colors);

    let urls = [];
    for (let type of ["marble", "beam", "pixel", "sunset", "ring", "bauhaus"]) {
        urls.push(`https://source.boringavatars.com/${type}/120/hfuodgsfougdf?colors=" + ${colors.map(color => color.slice(1)).join(',')}`);
    }
    let url = "https://source.boringavatars.com/ring/120/hfuodgsfougdf?colors=" + colors.map(color => color.slice(1)).join(',');
    console.log(url)

</script>
{#each colors as color}
    <div class="h-10 w-10" style="background-color: {color}"></div>
{/each}

{#each urls as url}
    <img src="{url}"/>

{/each}
<!--<Home></Home>-->
